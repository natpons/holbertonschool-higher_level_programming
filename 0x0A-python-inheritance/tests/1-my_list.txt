The ``1-my_list`` module
======================

Using ``MyList``
-------------------

This is an example text file in reStructuredText format. First import
`MyList`` from the ``1-my_list`` module:

	>>> MyList = __import__('1-my_list').MyList

Now use it:

	>>> my_list = MyList([1, 4, 2, 3, 5])
	>>> print(my_list)
	[1, 4, 2, 3, 5]
	>>> my_list.print_sorted()
	[1, 2, 3, 4, 5]

	>>> my_list = MyList([-1, -4, 2, -3, -5])
	>>> print(my_list)
	[-1, -4, 2, -3, -5]
	>>> my_list.print_sorted()
	[-5, -4, -3, -1, 2]

	>>> my_list = MyList([1, 4, 2, 3, 'School'])
	>>> print(my_list)
	Traceback (most recent call last):
	...
	TypeError: unorderable types: str() < int()

	>>> my_list = MyList([1, 4, 2, 3, 'School'])
	>>> my_list.print_sorted()
	Traceback (most recent call last):
	...
	TypeError: unorderable types: str() < int()

	>>> MyList([1.5, 4.9, 2, 3, 5])
	[1.5, 4.9, 2, 3, 5]

	>>> MyList([-4, -8, -1])
	[-4, -8, -1]

	>>> MyList([])
	[]

	>>> MyList(['a', 9, 3])
	['a', 9, 3]

	>>> MyList(True)
	Traceback (most recent call last):
	...
	TypeError: 'bool' object is not iterable

	>>> MyList(5)
	Traceback (most recent call last):
	...
	TypeError: 'int' object is not iterable

	>>> my_list = MyList([1, 4, 2, 3, 5])
	>>> my_list.print_sorted()
	[1, 2, 3, 4, 5]

	>>> my_list = MyList([])
	>>> my_list.print_sorted()
	[]

	>>> my_list = MyList([-3, -1, -7])
	>>> my_list.print_sorted()
	[-7, -3, -1]

	>>> my_list = MyList([3, 1, "a"])
	>>> my_list.print_sorted()
	Traceback (most recent call last):
	...
	TypeError: unorderable types: str() < int()

	>>> my_list = MyList(["c", "a", "b"])
	>>> my_list.print_sorted()
	['a', 'b', 'c']

	>>> my_list = MyList([3.5, 4.2, 1])
	>>> my_list.print_sorted()
	[1, 3.5, 4.2]

	>>> my_list = MyList(1, 2, 3)
	Traceback (most recent call last):
	...
	TypeError: list() takes at most 1 argument (3 given)
